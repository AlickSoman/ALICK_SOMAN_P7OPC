{"remainingRequest":"/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/src/components/Likes.vue?vue&type=template&id=33de1c88&scoped=true","dependencies":[{"path":"/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/src/components/Likes.vue","mtime":1631120511000},{"path":"/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/cache-loader/dist/cjs.js","mtime":1646670308046},{"path":"/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/babel-loader/lib/index.js","mtime":1646670309179},{"path":"/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1646670310149},{"path":"/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/cache-loader/dist/cjs.js","mtime":1646670308046},{"path":"/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/node_modules/vue-loader-v16/dist/index.js","mtime":1646670309571}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi0zM2RlMWM4OCIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtMzNkZTFjODgiKTsKCnZhciBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaSIsIHsKICBjbGFzczogImZhciBmYS10aHVtYnMtdXAgbGlrZUJ0biBsaWtlIgp9LCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImkiLCB7CiAgY2xhc3M6ICJmYXIgZmEtdGh1bWJzLXVwIGxpa2VCdG4gbGlrZWQiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gISRkYXRhLmxpa2VkID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJidXR0b24iLCB7CiAgICBrZXk6IDAsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmxpa2VQb3N0KCRwcm9wcy5wb3N0SWQpOwogICAgfSksCiAgICBjbGFzczogImJ0biIKICB9LCBbX2hvaXN0ZWRfMSwgX2NyZWF0ZVRleHRWTm9kZSgiICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLmxpa2VzLmxlbmd0aCksIDEKICAvKiBURVhUICovCiAgKV0pKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiYnV0dG9uIiwgewogICAga2V5OiAxLAogICAgb25DbGljazogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy51bmxpa2VQb3N0KCRwcm9wcy5wb3N0SWQpOwogICAgfSksCiAgICBjbGFzczogImJ0biIKICB9LCBbX2hvaXN0ZWRfMiwgX2NyZWF0ZVRleHRWTm9kZSgiICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLmxpa2VzLmxlbmd0aCksIDEKICAvKiBURVhUICovCiAgKV0pKTsKfSk7"},{"version":3,"sources":["/Users/admin/Desktop/ALICK_SOMAN_P7OPC/groupomania-réseau-social/src/components/Likes.vue"],"names":[],"mappings":";;;;;;8BAEQ,YAAA,CAA6C,GAA7C,EAA6C;AAA1C,EAAA,KAAK,EAAC;AAAoC,CAA7C,EAAwC,IAAxC,EAAwC,CAAA;AAAA;AAAxC,C;;8BAIA,YAAA,CAA8C,GAA9C,EAA8C;AAA3C,EAAA,KAAK,EAAC;AAAqC,CAA9C,EAAyC,IAAzC,EAAyC,CAAA;AAAA;AAAzC,C;;;;;UALW,KAAA,CAAA,K,kBAAf,YAAA,CAGS,QAHT,EAGS;UAAA;AAHc,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,QAAA,CAAS,MAAA,CAAA,MAAT,CAAF;AAAA,KAAA,CAGnB;AAHuC,IAAA,KAAK,EAAC;AAG7C,GAHT,E,CACI,U,mBAA6C,MAC7C,gBAAA,CAAE,KAAA,CAAA,KAAA,CAAM,MAAR,C,EAAc;AAAA;IAFlB,C,mBAIA,YAAA,CAGS,QAHT,EAGS;UAAA;AAHO,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,UAAA,CAAW,MAAA,CAAA,MAAX,CAAF;AAAA,KAAA,CAGZ;AAHkC,IAAA,KAAK,EAAC;AAGxC,GAHT,E,CACI,U,mBAA8C,MAC9C,gBAAA,CAAE,KAAA,CAAA,KAAA,CAAM,MAAR,C,EAAc;AAAA;IAFlB,C","sourcesContent":["<template>\n    <button v-if=\"!liked\" @click=\"likePost(postId)\" class=\"btn\">\n        <i class=\"far fa-thumbs-up likeBtn like\"></i>\n        {{likes.length}}\n    </button>\n    <button v-else @click=\"unlikePost(postId)\" class=\"btn\">\n        <i class=\"far fa-thumbs-up likeBtn liked\"></i>\n        {{likes.length}}\n    </button>\n</template>\n\n<script>\nexport default {\n    name: 'Likes',\n    props: {\n        postId: Number,\n        userId: Number\n    },\n    data() {\n        return {\n            likes: [],\n            liked: null   \n        }\n    },\n    methods: {\n        /* fetch des Likes en fonction de l'id du post concerné */      \n        async fetchLikes(postId) {\n            const resLikes = await fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/likes`)\n            const dataLikes = await resLikes.json()\n            dataLikes.forEach(like => {\n            like.userId == this.userId ? this.liked = true : this.like = false // <- ici on vérifie si notre user à déjà liker ce post\n        })\n            return dataLikes\n        },\n        /* fonction qui like le post (selon son id) */\n        likePost(postId) {\n            const data = {\n                like: true,\n                userId: this.userId,\n                postId: postId\n            }\n            fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/like`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n                .then(res => res.json())\n                .then(data => this.likes.push(data))\n                .catch(error => console.log(error))\n            this.liked = true // <- on indiquer à notre template que le user à liker ce post\n        },\n        /* fonction pour unliker le post */\n        unlikePost(postId) {\n            const data = {\n                userId: this.userId\n            }\n            fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/unlike`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n            this.likes = this.likes.filter((like) => like.userId != this.userId) // <- pour unliker le post côté front\n            this.liked = false\n        }\n    },\n    async created() {\n        this.likes = await this.fetchLikes(this.postId)\n    }\n}\n</script>\n\n<style scoped>\nbutton {\n    background: none;\n    border-style: none;\n    outline: none;\n    width: 40%\n}\np {\n    margin: 1rem 0 1rem 0;\n}\n.liked {\n    color: white;\n    background-color: #3174e4;\n    border: 1px solid #3174e4;\n    border-radius: 50%;\n    padding: 0.5rem;\n}\n.like {\n    color: #3174e4;\n    background-color: white;\n    border: 1px solid #3174e4;\n    border-radius: 50%;\n    padding: 0.5rem;\n}\ni {\n    margin-right: 4px;\n}\n</style>\n"],"sourceRoot":""}]}