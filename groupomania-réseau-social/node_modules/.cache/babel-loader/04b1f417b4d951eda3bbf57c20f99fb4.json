{"remainingRequest":"/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/src/components/Likes.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/src/components/Likes.vue","mtime":1631120511000},{"path":"/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1646670308046},{"path":"/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/node_modules/babel-loader/lib/index.js","mtime":1646670309179},{"path":"/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1646670308046},{"path":"/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1646670309571}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hZG1pbi9EZXNrdG9wL1A3X0FMSUNLX1NPTUFOL3Z1ZS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xpa2VzJywKICBwcm9wczogewogICAgcG9zdElkOiBOdW1iZXIsCiAgICB1c2VySWQ6IE51bWJlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpa2VzOiBbXSwKICAgICAgbGlrZWQ6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKiBmZXRjaCBkZXMgTGlrZXMgZW4gZm9uY3Rpb24gZGUgbCdpZCBkdSBwb3N0IGNvbmNlcm7DqSAqLwogICAgZmV0Y2hMaWtlczogZnVuY3Rpb24gZmV0Y2hMaWtlcyhwb3N0SWQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc0xpa2VzLCBkYXRhTGlrZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvcG9zdHMvIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkocG9zdElkKSwgIi9saWtlcyIpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzTGlrZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzTGlrZXMuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBkYXRhTGlrZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YUxpa2VzLmZvckVhY2goZnVuY3Rpb24gKGxpa2UpIHsKICAgICAgICAgICAgICAgICAgbGlrZS51c2VySWQgPT0gX3RoaXMudXNlcklkID8gX3RoaXMubGlrZWQgPSB0cnVlIDogX3RoaXMubGlrZSA9IGZhbHNlOyAvLyA8LSBpY2kgb24gdsOpcmlmaWUgc2kgbm90cmUgdXNlciDDoCBkw6lqw6AgbGlrZXIgY2UgcG9zdAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBkYXRhTGlrZXMpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qIGZvbmN0aW9uIHF1aSBsaWtlIGxlIHBvc3QgKHNlbG9uIHNvbiBpZCkgKi8KICAgIGxpa2VQb3N0OiBmdW5jdGlvbiBsaWtlUG9zdChwb3N0SWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICBsaWtlOiB0cnVlLAogICAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsCiAgICAgICAgcG9zdElkOiBwb3N0SWQKICAgICAgfTsKICAgICAgZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvcG9zdHMvIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkocG9zdElkKSwgIi9saWtlIiksIHsKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgfSwKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBfdGhpczIubGlrZXMucHVzaChkYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICAgIHRoaXMubGlrZWQgPSB0cnVlOyAvLyA8LSBvbiBpbmRpcXVlciDDoCBub3RyZSB0ZW1wbGF0ZSBxdWUgbGUgdXNlciDDoCBsaWtlciBjZSBwb3N0CiAgICB9LAoKICAgIC8qIGZvbmN0aW9uIHBvdXIgdW5saWtlciBsZSBwb3N0ICovCiAgICB1bmxpa2VQb3N0OiBmdW5jdGlvbiB1bmxpa2VQb3N0KHBvc3RJZCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gewogICAgICAgIHVzZXJJZDogdGhpcy51c2VySWQKICAgICAgfTsKICAgICAgZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvcG9zdHMvIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkocG9zdElkKSwgIi91bmxpa2UiKSwgewogICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgIH0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgICAgfSk7CiAgICAgIHRoaXMubGlrZXMgPSB0aGlzLmxpa2VzLmZpbHRlcihmdW5jdGlvbiAobGlrZSkgewogICAgICAgIHJldHVybiBsaWtlLnVzZXJJZCAhPSBfdGhpczMudXNlcklkOwogICAgICB9KTsgLy8gPC0gcG91ciB1bmxpa2VyIGxlIHBvc3QgY8O0dMOpIGZyb250CgogICAgICB0aGlzLmxpa2VkID0gZmFsc2U7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBfdGhpczQuZmV0Y2hMaWtlcyhfdGhpczQucG9zdElkKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpczQubGlrZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/Users/admin/Desktop/P7_ALICK_SOMAN/vue-frontend/src/components/Likes.vue"],"names":[],"mappings":";;;;;;AAYA,eAAe;AACX,EAAA,IAAI,EAAE,OADK;AAEX,EAAA,KAAK,EAAE;AACH,IAAA,MAAM,EAAE,MADL;AAEH,IAAA,MAAM,EAAE;AAFL,GAFI;AAMX,EAAA,IANW,kBAMJ;AACH,WAAO;AACH,MAAA,KAAK,EAAE,EADJ;AAEH,MAAA,KAAK,EAAE;AAFJ,KAAP;AAIH,GAXU;AAYX,EAAA,OAAO,EAAE;AACL;AACM,IAAA,UAFD,sBAEY,MAFZ,EAEoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACE,KAAK,2CAAoC,IAAI,CAAC,SAAL,CAAe,MAAf,CAApC,YADP;;AAAA;AACf,gBAAA,QADe;AAAA;AAAA,uBAEG,QAAQ,CAAC,IAAT,EAFH;;AAAA;AAEf,gBAAA,SAFe;AAGrB,gBAAA,SAAS,CAAC,OAAV,CAAkB,UAAA,IAAG,EAAK;AAC1B,kBAAA,IAAI,CAAC,MAAL,IAAe,KAAI,CAAC,MAApB,GAA6B,KAAI,CAAC,KAAL,GAAa,IAA1C,GAAiD,KAAI,CAAC,IAAL,GAAY,KAA7D,CAD0B,CACyC;AACtE,iBAFG;AAHqB,iDAMd,SANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxB,KATI;;AAUL;AACA,IAAA,QAXK,oBAWI,MAXJ,EAWY;AAAA;;AACb,UAAM,IAAG,GAAI;AACT,QAAA,IAAI,EAAE,IADG;AAET,QAAA,MAAM,EAAE,KAAK,MAFJ;AAGT,QAAA,MAAM,EAAE;AAHC,OAAb;AAKA,MAAA,KAAK,2CAAoC,IAAI,CAAC,SAAL,CAAe,MAAf,CAApC,YAAmE;AACpE,QAAA,MAAM,EAAE,MAD4D;AAEpE,QAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF2D;AAKpE,QAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AAL8D,OAAnE,CAAL,CAOK,IAPL,CAOU,UAAA,GAAE;AAAA,eAAK,GAAG,CAAC,IAAJ,EAAL;AAAA,OAPZ,EAQK,IARL,CAQU,UAAA,IAAG;AAAA,eAAK,MAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAL;AAAA,OARb,EASK,KATL,CASW,UAAA,KAAI;AAAA,eAAK,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAL;AAAA,OATf;AAUA,WAAK,KAAL,GAAa,IAAb,CAhBa,CAgBK;AACrB,KA5BI;;AA6BL;AACA,IAAA,UA9BK,sBA8BM,MA9BN,EA8Bc;AAAA;;AACf,UAAM,IAAG,GAAI;AACT,QAAA,MAAM,EAAE,KAAK;AADJ,OAAb;AAGA,MAAA,KAAK,2CAAoC,IAAI,CAAC,SAAL,CAAe,MAAf,CAApC,cAAqE;AACtE,QAAA,MAAM,EAAE,QAD8D;AAEtE,QAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF6D;AAKtE,QAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AALgE,OAArE,CAAL;AAOA,WAAK,KAAL,GAAa,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,IAAD;AAAA,eAAU,IAAI,CAAC,MAAL,IAAe,MAAI,CAAC,MAA9B;AAAA,OAAlB,CAAb,CAXe,CAWsD;;AACrE,WAAK,KAAL,GAAa,KAAb;AACJ;AA3CK,GAZE;AAyDL,EAAA,OAzDK,qBAyDK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACO,MAAI,CAAC,UAAL,CAAgB,MAAI,CAAC,MAArB,CADP;;AAAA;AACZ,cAAA,MAAI,CAAC,KADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB;AA3DW,CAAf","sourcesContent":["<template>\n    <button v-if=\"!liked\" @click=\"likePost(postId)\" class=\"btn\">\n        <i class=\"far fa-thumbs-up likeBtn like\"></i>\n        {{likes.length}}\n    </button>\n    <button v-else @click=\"unlikePost(postId)\" class=\"btn\">\n        <i class=\"far fa-thumbs-up likeBtn liked\"></i>\n        {{likes.length}}\n    </button>\n</template>\n\n<script>\nexport default {\n    name: 'Likes',\n    props: {\n        postId: Number,\n        userId: Number\n    },\n    data() {\n        return {\n            likes: [],\n            liked: null   \n        }\n    },\n    methods: {\n        /* fetch des Likes en fonction de l'id du post concerné */      \n        async fetchLikes(postId) {\n            const resLikes = await fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/likes`)\n            const dataLikes = await resLikes.json()\n            dataLikes.forEach(like => {\n            like.userId == this.userId ? this.liked = true : this.like = false // <- ici on vérifie si notre user à déjà liker ce post\n        })\n            return dataLikes\n        },\n        /* fonction qui like le post (selon son id) */\n        likePost(postId) {\n            const data = {\n                like: true,\n                userId: this.userId,\n                postId: postId\n            }\n            fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/like`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n                .then(res => res.json())\n                .then(data => this.likes.push(data))\n                .catch(error => console.log(error))\n            this.liked = true // <- on indiquer à notre template que le user à liker ce post\n        },\n        /* fonction pour unliker le post */\n        unlikePost(postId) {\n            const data = {\n                userId: this.userId\n            }\n            fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/unlike`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n            this.likes = this.likes.filter((like) => like.userId != this.userId) // <- pour unliker le post côté front\n            this.liked = false\n        }\n    },\n    async created() {\n        this.likes = await this.fetchLikes(this.postId)\n    }\n}\n</script>\n\n<style scoped>\nbutton {\n    background: none;\n    border-style: none;\n    outline: none;\n    width: 40%\n}\np {\n    margin: 1rem 0 1rem 0;\n}\n.liked {\n    color: white;\n    background-color: #3174e4;\n    border: 1px solid #3174e4;\n    border-radius: 50%;\n    padding: 0.5rem;\n}\n.like {\n    color: #3174e4;\n    background-color: white;\n    border: 1px solid #3174e4;\n    border-radius: 50%;\n    padding: 0.5rem;\n}\ni {\n    margin-right: 4px;\n}\n</style>\n"],"sourceRoot":""}]}