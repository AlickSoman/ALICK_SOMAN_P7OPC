{"remainingRequest":"/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/admin/Desktop/P7 Test 2/vue-frontend/src/components/ModifyPost.vue?vue&type=template&id=0d9e34ac&scoped=true","dependencies":[{"path":"/Users/admin/Desktop/P7 Test 2/vue-frontend/src/components/ModifyPost.vue","mtime":1631120511000},{"path":"/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1646670308046},{"path":"/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/babel-loader/lib/index.js","mtime":1646670309179},{"path":"/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1646670310149},{"path":"/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1646670308046},{"path":"/Users/admin/Desktop/P7 Test 2/vue-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1646670309571}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgd2l0aE1vZGlmaWVycyBhcyBfd2l0aE1vZGlmaWVycywgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoSWQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCJkYXRhLXYtMGQ5ZTM0YWMiKTsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LTBkOWUzNGFjIik7Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBpZDogIm1vZGlmeVBvc3QiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGlkOiAiYnRucyIKfTsKCnZhciBfaG9pc3RlZF8zID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgibGFiZWwiLCB7CiAgZm9yOiAiZmlsZSIKfSwgIkNob2lzaXIgdW5lIG5vdXZlbGxlIGltYWdlIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSB7CiAgaWQ6ICJmaWxlQ29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfNSA9IHsKICBrZXk6IDEKfTsKdmFyIF9ob2lzdGVkXzYgPSB7CiAgaWQ6ICJ0ZXh0Igp9OwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJsYWJlbCIsIHsKICBmb3I6ICJ0ZXh0YXJlYSIKfSwgIkNoYW5nZXIgdm90cmUgdGV4dGUiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfOCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImRpdiIsIHsKICBpZDogIm1vZGlmeSIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImlucHV0IiwgewogIHR5cGU6ICJzdWJtaXQiLAogIHZhbHVlOiAiamUgbW9kaWZpZSAhIiwKICBjbGFzczogImJ0biIKfSldLCAtMQovKiBIT0lTVEVEICovCik7CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJmb3JtIiwgewogICAgb25TdWJtaXQ6IF9jYWNoZVszXSB8fCAoX2NhY2hlWzNdID0gX3dpdGhNb2RpZmllcnMoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMubW9kaWZ5UG9zdCAmJiAkb3B0aW9ucy5tb2RpZnlQb3N0LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSwgWyJwcmV2ZW50Il0pKQogIH0sIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfaG9pc3RlZF8zLCBfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogImZpbGUiLAogICAgcmVmOiAiZmlsZSIsCiAgICBuYW1lOiAiZmlsZSIsCiAgICBjbGFzczogInVwbG9hZCIsCiAgICBpZDogImZpbGUiLAogICAgb25DaGFuZ2U6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMudXBkYXRlRmlsZSAmJiAkb3B0aW9ucy51cGRhdGVGaWxlLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBudWxsLCA1NDQKICAvKiBIWURSQVRFX0VWRU5UUywgTkVFRF9QQVRDSCAqLwogICldKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbJGRhdGEucHJldmlldyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiaW1nIiwgewogICAga2V5OiAwLAogICAgaWQ6ICJwcmV2aWV3IiwKICAgIHNyYzogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9pbWFnZXMvJyArICRkYXRhLnBvc3QuZmlsZSwKICAgIGFsdDogJGRhdGEucG9zdC5maWxlCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbInNyYyIsICJhbHQiXSkpIDogKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJwIiwgX2hvaXN0ZWRfNSwgIkNlIHBvc3QgbmUgcG9zc8OoZGUgcGFzIGQnaW1hZ2UiKSldKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBbX2hvaXN0ZWRfNywgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgidGV4dGFyZWEiLCB7CiAgICBuYW1lOiAidGV4dGFyZWEiLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnBvc3QudGV4dCA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRkYXRhLnBvc3QudGV4dF1dKV0pLCBfaG9pc3RlZF84LCBfY3JlYXRlVk5vZGUoInAiLCBudWxsLCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLmVyck1zZyksIDEKICAvKiBURVhUICovCiAgKV0sIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApXSk7Cn0pOw=="},{"version":3,"sources":["/Users/admin/Desktop/P7 Test 2/vue-frontend/src/components/ModifyPost.vue"],"names":[],"mappings":";;;;;;;AACS,EAAA,EAAE,EAAC;;;AAEK,EAAA,EAAE,EAAC;;;8BACJ,YAAA,CAAoD,OAApD,EAAoD;AAA7C,EAAA,GAAG,EAAC;AAAyC,CAApD,EAAkB,4BAAlB,EAA4C,CAAA;AAAA;AAA5C,C;;;AAGC,EAAA,EAAE,EAAC;;;;;;AAIH,EAAA,EAAE,EAAC;;;8BACJ,YAAA,CAAiD,OAAjD,EAAiD;AAA1C,EAAA,GAAG,EAAC;AAAsC,CAAjD,EAAsB,qBAAtB,EAAyC,CAAA;AAAA;AAAzC,C;;8BAGJ,YAAA,CAEM,KAFN,EAEM;AAFD,EAAA,EAAE,EAAC;AAEF,CAFN,EAAgB,C,aACZ,YAAA,CAAsD,OAAtD,EAAsD;AAA/C,EAAA,IAAI,EAAC,QAA0C;AAAjC,EAAA,KAAK,EAAC,cAA2B;AAAZ,EAAA,KAAK,EAAC;AAAM,CAAtD,CADY,CAAhB,E;;AAAA,C;;;;;uBAdR,YAAA,CAmBM,KAnBN,EAAA,UAAA,EAmBM,CAlBF,YAAA,CAiBO,MAjBP,EAiBO;AAjBA,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AAAA,aAAU,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAV;AAAA,KAAA,EAAoB,CAAA,SAAA,CAApB,CAAA;AAiBN,GAjBP,E,CACI,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,UAEE,EADF,YAAA,CAAwF,OAAxF,EAAwF;AAAjF,IAAA,IAAI,EAAC,MAA4E;AAArE,IAAA,GAAG,EAAC,MAAiE;AAA1D,IAAA,IAAI,EAAC,MAAqD;AAA9C,IAAA,KAAK,EAAC,QAAwC;AAA/B,IAAA,EAAE,EAAC,MAA4B;AAApB,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAc,GAAxF,E,IAAA,E;;AAAA,GACE,CAHN,C,EAIA,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAF0F,KAAA,CAAA,O,kBAA5F,YAAA,CAAqG,KAArG,EAAqG;UAAA;AAAhG,IAAA,EAAE,EAAC,SAA6F;AAAlF,IAAA,GAAG,EAAA,kCAAoC,KAAA,CAAA,IAAA,CAAK,IAAsC;AAA/B,IAAA,GAAG,EAAE,KAAA,CAAA,IAAA,CAAK;AAAqB,GAArG,E,IAAA,E;;AAAA,I,cAAA,C,mBACA,YAAA,CAA4C,GAA5C,EAA4C,UAA5C,EAAU,gCAAV,C,CACE,CAHN,C,EAIA,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,UAEE,E,gBADF,YAAA,CAAyD,UAAzD,EAAyD;AAA/C,IAAA,IAAI,EAAC,UAA0C;;aAAtB,KAAA,CAAA,IAAA,CAAK,IAAL,GAAS,M;;AAAa,GAAzD,E,IAAA,E;;AAAA,G,iBAAmC,KAAA,CAAA,IAAA,CAAK,I,GACtC,CAHN,C,EAIA,U,EAGA,YAAA,CAAiB,GAAjB,EAAiB,IAAjB,EAAiB,gBAAA,CAAZ,KAAA,CAAA,MAAY,CAAjB,EAAW;AAAA;AAAX,G,CAhBJ,E;;AAAA,GAkBE,CAnBN,C","sourcesContent":["<template>\n    <div id=\"modifyPost\">\n        <form @submit.prevent=\"modifyPost\">\n            <div id=\"btns\">\n                <label for=\"file\">Choisir une nouvelle image</label>\n                <input type=\"file\" ref=\"file\" name=\"file\" class=\"upload\" id=\"file\" @change=\"updateFile\">\n            </div>\n            <div id=\"fileContainer\">\n                <img id=\"preview\" :src=\"'http://localhost:3000/images/' + post.file\" :alt=\"post.file\" v-if=\"preview\">\n                <p v-else>Ce post ne possède pas d'image</p>\n            </div>\n            <div id=\"text\">\n                <label for=\"textarea\">Changer votre texte</label>\n                <textarea name=\"textarea\" v-model=\"post.text\"></textarea>\n            </div>\n            <div id=\"modify\">\n                <input type=\"submit\" value=\"je modifie !\" class=\"btn\">    \n            </div>\n            <p>{{errMsg}}</p>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport router from '../router'\nexport default {\n    name: 'ModifyPost',\n    beforeCreate() {\n        /* on récupère l'id du post via l'url */\n        const parsedUrl = new URL(window.location.href)\n        const postId = parsedUrl.pathname.split('/modify-post/')[1]\n        /* selon l'id on récupère le post concerné */\n        fetch(`http://localhost:3000/api/posts/${postId}`, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                data.file ? this.preview = true : this.preview = false\n                this.post = {...data}\n            })\n            .catch(error => {error})\n    },\n    data() {\n        return {\n            post: {},\n            newFile: '',\n            preview: null,\n            errMsg: null\n        }\n    },\n    methods: {\n        updateFile(event) {\n            /* sur le onchange on va attribuer cette valeur à file (nécessaire pour l'envoi au backend) */ \n            this.newFile = this.$refs.file.files[0]\n            let input = event.target\n            if(input.files) {\n                let reader = new FileReader()\n                reader.onload = (e) => {\n                    document.getElementById('preview').src = e.target.result\n                }\n                reader.readAsDataURL(input.files[0])\n                this.preview = true\n            }\n        },\n        async modifyPost() {\n            /* on peut envoyer un post sans image mais il faut au moins qu'il y est un texte */     \n            if (!this.post.text) {\n                this.errMsg = \"Error => vous devez remplir le champ <message> pour créer une nouvelle publication!\"\n                return\n            }\n            /* on créé un objet formData afin de pouvoir ajouter le texte et surtout le file choisi */\n            let formData = new FormData()\n            formData.append('text', this.post.text)\n            if (this.newFile) {\n                formData.append('file', this.newFile)\n            }\n            /* envoi du form via axios.put de l'objet formData */\n            if (confirm(\"êtes vous sûr de vouloir modifier votre post ?\")) {\n                axios.put(`http://localhost:3000/api/posts/${this.post.id}`, formData, {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    },\n                })  \n                    .then(res => {\n                        console.log(res.data)\n                        router.push({ path: '/home' })                                               \n                    })\n                    .catch(error => console.log(error))\n            }            \n        }\n    }\n}\n</script>\n\n<style scoped>\n#modifyPost {\n    max-width: 60%;\n    box-shadow: 2px 2px 8px 5px rgb(0 0 0 / 10%);\n    margin: auto;\n    margin-top: 2rem;\n    padding: 1rem;\n    border-radius: 4px;\n}\nform {\n    display: flex;\n    flex-direction: column;\n}\n#fileContainer {\n    overflow: hidden;\n    margin: 1rem 0 1rem 0;\n}\nimg {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n}\n#btns {\n    display: flex;\n    flex-direction: column;\n}\n#file {\n    cursor: pointer;\n}\n#text {\n    display: flex;\n    flex-direction: column;\n}\nlabel {\n    margin: 1rem;\n    padding: 0.5rem 0;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 2px 2px 8px 5px rgb(0 0 0 / 10%);\n}\ntextarea {\n    padding: 16px;\n}\n#modify {\n    text-align: right;\n}\n.btn {\n    background-color: #1c68e6;\n    border-style: none;\n    outline: none;\n    width: 20%;\n    border-radius: 8px;\n    height: 40px;\n    color: white;\n    margin: 1rem 0 1rem 0;\n}\n@media screen and (max-width: 992px) {\n    #modifyPost {\n        max-width: 90%;\n    }\n}\n</style>"],"sourceRoot":""}]}