{"remainingRequest":"/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/src/components/Likes.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/src/components/Likes.vue","mtime":1631120511000},{"path":"/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/node_modules/cache-loader/dist/cjs.js","mtime":1646670308046},{"path":"/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/node_modules/babel-loader/lib/index.js","mtime":1646670309179},{"path":"/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/node_modules/cache-loader/dist/cjs.js","mtime":1646670308046},{"path":"/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/node_modules/vue-loader-v16/dist/index.js","mtime":1646670309571}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hZG1pbi9EZXNrdG9wL1JFU0VBVS1HUk9VUE9NQU5JQS9ncm91cG9tYW5pYS1yXHhFOXNlYXUtc29jaWFsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTGlrZXMnLAogIHByb3BzOiB7CiAgICBwb3N0SWQ6IE51bWJlciwKICAgIHVzZXJJZDogTnVtYmVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGlrZXM6IFtdLAogICAgICBsaWtlZDogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qIGZldGNoIGRlcyBMaWtlcyBlbiBmb25jdGlvbiBkZSBsJ2lkIGR1IHBvc3QgY29uY2VybsOpICovCiAgICBmZXRjaExpa2VzOiBmdW5jdGlvbiBmZXRjaExpa2VzKHBvc3RJZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzTGlrZXMsIGRhdGFMaWtlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0cy8iLmNvbmNhdChKU09OLnN0cmluZ2lmeShwb3N0SWQpLCAiL2xpa2VzIikpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNMaWtlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXNMaWtlcy5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGRhdGFMaWtlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhTGlrZXMuZm9yRWFjaChmdW5jdGlvbiAobGlrZSkgewogICAgICAgICAgICAgICAgICBsaWtlLnVzZXJJZCA9PSBfdGhpcy51c2VySWQgPyBfdGhpcy5saWtlZCA9IHRydWUgOiBfdGhpcy5saWtlID0gZmFsc2U7IC8vIDwtIGljaSBvbiB2w6lyaWZpZSBzaSBub3RyZSB1c2VyIMOgIGTDqWrDoCBsaWtlciBjZSBwb3N0CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGRhdGFMaWtlcyk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCgogICAgLyogZm9uY3Rpb24gcXVpIGxpa2UgbGUgcG9zdCAoc2Vsb24gc29uIGlkKSAqLwogICAgbGlrZVBvc3Q6IGZ1bmN0aW9uIGxpa2VQb3N0KHBvc3RJZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gewogICAgICAgIGxpa2U6IHRydWUsCiAgICAgICAgdXNlcklkOiB0aGlzLnVzZXJJZCwKICAgICAgICBwb3N0SWQ6IHBvc3RJZAogICAgICB9OwogICAgICBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0cy8iLmNvbmNhdChKU09OLnN0cmluZ2lmeShwb3N0SWQpLCAiL2xpa2UiKSwgewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICB9LAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5saWtlcy5wdXNoKGRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgICAgdGhpcy5saWtlZCA9IHRydWU7IC8vIDwtIG9uIGluZGlxdWVyIMOgIG5vdHJlIHRlbXBsYXRlIHF1ZSBsZSB1c2VyIMOgIGxpa2VyIGNlIHBvc3QKICAgIH0sCgogICAgLyogZm9uY3Rpb24gcG91ciB1bmxpa2VyIGxlIHBvc3QgKi8KICAgIHVubGlrZVBvc3Q6IGZ1bmN0aW9uIHVubGlrZVBvc3QocG9zdElkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgdXNlcklkOiB0aGlzLnVzZXJJZAogICAgICB9OwogICAgICBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0cy8iLmNvbmNhdChKU09OLnN0cmluZ2lmeShwb3N0SWQpLCAiL3VubGlrZSIpLCB7CiAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgfSwKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKQogICAgICB9KTsKICAgICAgdGhpcy5saWtlcyA9IHRoaXMubGlrZXMuZmlsdGVyKGZ1bmN0aW9uIChsaWtlKSB7CiAgICAgICAgcmV0dXJuIGxpa2UudXNlcklkICE9IF90aGlzMy51c2VySWQ7CiAgICAgIH0pOyAvLyA8LSBwb3VyIHVubGlrZXIgbGUgcG9zdCBjw7R0w6kgZnJvbnQKCiAgICAgIHRoaXMubGlrZWQgPSBmYWxzZTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC5mZXRjaExpa2VzKF90aGlzNC5wb3N0SWQpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIF90aGlzNC5saWtlcyA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/admin/Desktop/RESEAU-GROUPOMANIA/groupomania-réseau-social/src/components/Likes.vue"],"names":[],"mappings":";;;;;;AAYA,eAAe;AACX,EAAA,IAAI,EAAE,OADK;AAEX,EAAA,KAAK,EAAE;AACH,IAAA,MAAM,EAAE,MADL;AAEH,IAAA,MAAM,EAAE;AAFL,GAFI;AAMX,EAAA,IANW,kBAMJ;AACH,WAAO;AACH,MAAA,KAAK,EAAE,EADJ;AAEH,MAAA,KAAK,EAAE;AAFJ,KAAP;AAIH,GAXU;AAYX,EAAA,OAAO,EAAE;AACL;AACM,IAAA,UAFD,sBAEY,MAFZ,EAEoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACE,KAAK,2CAAoC,IAAI,CAAC,SAAL,CAAe,MAAf,CAApC,YADP;;AAAA;AACf,gBAAA,QADe;AAAA;AAAA,uBAEG,QAAQ,CAAC,IAAT,EAFH;;AAAA;AAEf,gBAAA,SAFe;AAGrB,gBAAA,SAAS,CAAC,OAAV,CAAkB,UAAA,IAAG,EAAK;AAC1B,kBAAA,IAAI,CAAC,MAAL,IAAe,KAAI,CAAC,MAApB,GAA6B,KAAI,CAAC,KAAL,GAAa,IAA1C,GAAiD,KAAI,CAAC,IAAL,GAAY,KAA7D,CAD0B,CACyC;AACtE,iBAFG;AAHqB,iDAMd,SANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxB,KATI;;AAUL;AACA,IAAA,QAXK,oBAWI,MAXJ,EAWY;AAAA;;AACb,UAAM,IAAG,GAAI;AACT,QAAA,IAAI,EAAE,IADG;AAET,QAAA,MAAM,EAAE,KAAK,MAFJ;AAGT,QAAA,MAAM,EAAE;AAHC,OAAb;AAKA,MAAA,KAAK,2CAAoC,IAAI,CAAC,SAAL,CAAe,MAAf,CAApC,YAAmE;AACpE,QAAA,MAAM,EAAE,MAD4D;AAEpE,QAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF2D;AAKpE,QAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AAL8D,OAAnE,CAAL,CAOK,IAPL,CAOU,UAAA,GAAE;AAAA,eAAK,GAAG,CAAC,IAAJ,EAAL;AAAA,OAPZ,EAQK,IARL,CAQU,UAAA,IAAG;AAAA,eAAK,MAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAL;AAAA,OARb,EASK,KATL,CASW,UAAA,KAAI;AAAA,eAAK,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAL;AAAA,OATf;AAUA,WAAK,KAAL,GAAa,IAAb,CAhBa,CAgBK;AACrB,KA5BI;;AA6BL;AACA,IAAA,UA9BK,sBA8BM,MA9BN,EA8Bc;AAAA;;AACf,UAAM,IAAG,GAAI;AACT,QAAA,MAAM,EAAE,KAAK;AADJ,OAAb;AAGA,MAAA,KAAK,2CAAoC,IAAI,CAAC,SAAL,CAAe,MAAf,CAApC,cAAqE;AACtE,QAAA,MAAM,EAAE,QAD8D;AAEtE,QAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF6D;AAKtE,QAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AALgE,OAArE,CAAL;AAOA,WAAK,KAAL,GAAa,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,IAAD;AAAA,eAAU,IAAI,CAAC,MAAL,IAAe,MAAI,CAAC,MAA9B;AAAA,OAAlB,CAAb,CAXe,CAWsD;;AACrE,WAAK,KAAL,GAAa,KAAb;AACJ;AA3CK,GAZE;AAyDL,EAAA,OAzDK,qBAyDK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACO,MAAI,CAAC,UAAL,CAAgB,MAAI,CAAC,MAArB,CADP;;AAAA;AACZ,cAAA,MAAI,CAAC,KADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB;AA3DW,CAAf","sourcesContent":["<template>\n    <button v-if=\"!liked\" @click=\"likePost(postId)\" class=\"btn\">\n        <i class=\"far fa-thumbs-up likeBtn like\"></i>\n        {{likes.length}}\n    </button>\n    <button v-else @click=\"unlikePost(postId)\" class=\"btn\">\n        <i class=\"far fa-thumbs-up likeBtn liked\"></i>\n        {{likes.length}}\n    </button>\n</template>\n\n<script>\nexport default {\n    name: 'Likes',\n    props: {\n        postId: Number,\n        userId: Number\n    },\n    data() {\n        return {\n            likes: [],\n            liked: null   \n        }\n    },\n    methods: {\n        /* fetch des Likes en fonction de l'id du post concerné */      \n        async fetchLikes(postId) {\n            const resLikes = await fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/likes`)\n            const dataLikes = await resLikes.json()\n            dataLikes.forEach(like => {\n            like.userId == this.userId ? this.liked = true : this.like = false // <- ici on vérifie si notre user à déjà liker ce post\n        })\n            return dataLikes\n        },\n        /* fonction qui like le post (selon son id) */\n        likePost(postId) {\n            const data = {\n                like: true,\n                userId: this.userId,\n                postId: postId\n            }\n            fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/like`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n                .then(res => res.json())\n                .then(data => this.likes.push(data))\n                .catch(error => console.log(error))\n            this.liked = true // <- on indiquer à notre template que le user à liker ce post\n        },\n        /* fonction pour unliker le post */\n        unlikePost(postId) {\n            const data = {\n                userId: this.userId\n            }\n            fetch(`http://localhost:3000/api/posts/${JSON.stringify(postId)}/unlike`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n            this.likes = this.likes.filter((like) => like.userId != this.userId) // <- pour unliker le post côté front\n            this.liked = false\n        }\n    },\n    async created() {\n        this.likes = await this.fetchLikes(this.postId)\n    }\n}\n</script>\n\n<style scoped>\nbutton {\n    background: none;\n    border-style: none;\n    outline: none;\n    width: 40%\n}\np {\n    margin: 1rem 0 1rem 0;\n}\n.liked {\n    color: white;\n    background-color: #3174e4;\n    border: 1px solid #3174e4;\n    border-radius: 50%;\n    padding: 0.5rem;\n}\n.like {\n    color: #3174e4;\n    background-color: white;\n    border: 1px solid #3174e4;\n    border-radius: 50%;\n    padding: 0.5rem;\n}\ni {\n    margin-right: 4px;\n}\n</style>\n"],"sourceRoot":""}]}